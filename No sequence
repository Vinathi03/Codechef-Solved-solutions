use std::io::stdin;

fn take_vector() -> Vec<i128> {
    let mut input = String::new();
    stdin().read_line(&mut input).unwrap();
    let arr: Vec<i128> = input.trim().split_whitespace().map(|x| x.parse().unwrap()).collect();
    return arr;
}

fn take_int() -> usize {
    let mut input = String::new();
    stdin().read_line(&mut input).unwrap();
    input.trim().parse().unwrap()
}

fn print_vec(arr:Vec<i128>, n:i128){
    let zero = n - (arr.len() as i128) ;
    for i in arr {
        print!("{} ", i);
    }
    for _ in 0..zero{
        print!("0 ");
    }
    println!();
}

fn solve() {
// ======================= Code Here ========================
    let inp = take_vector();
    let mut n = inp[0];
    let mut k = inp[1];
    let mut s = inp[2];


    let mut arr:Vec<i128> = Vec::new();
    for _ in 0..n {

        if s == 0 {
            print_vec(arr, n);
            return;
        }
        if s%k == 0{
            arr.push(0);
            s/=k;
            continue;
        }
        if (s-1)%k == 0 {
            arr.push(1);
            s = (s-1)/k;
            continue;
        }
        if (s+1)%k == 0 {
            arr.push(-1);
            s = (s+1)/k;
            continue;
        }

        println!("-2");
        return;
    }

    if s != 0 || arr.len() > (n as usize){
        println!("-2");
        return;
    }
    print_vec(arr, n);
}

pub fn main() {
    let t = take_int();
    for _ in 0..t {
        solve();
    }
}
